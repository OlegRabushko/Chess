{"version":3,"sources":["components/body/replays/replays.module.scss","components/header/header.module.scss","components/footer/footer.module.scss","components/body/start-window/start-window.module.scss","components/body/game/game.module.scss","components/interfaces-enums.ts","components/header/header.tsx","components/body/game/chess-field/tile.tsx","indexedDb/indexedDb.ts","components/body/game/rules/rules.ts","api/server.ts","redux/actions.ts","components/body/game/chess-field/chessboard-state.tsx","api/webSocket.ts","components/body/game/helpers/helper.ts","components/body/game/chess-field/chess-field-helper.ts","components/body/game/chess-field/chess-field.tsx","components/body/game/player-field/playerField.tsx","components/body/game/helpers/winner.tsx","components/body/game/helpers/preloader.tsx","components/body/game/game.tsx","components/body/replays/replays.tsx","components/body/start-window/change-name-modal.tsx","components/body/start-window/modal-window.tsx","components/body/start-window/player-element.tsx","components/body/start-window/start-window.tsx","components/body/body.tsx","components/footer/footer.tsx","App.tsx","reportWebVitals.ts","redux/reducers.ts","redux/index.ts","index.tsx"],"names":["module","exports","TeamType","PieceType","Header","className","s","header__container","logo__img","logo__text","Tile","number","image","position","size","style","backgroundImage","process","width","db","Rules","x","y","boardState","find","p","team","px","py","type","KING","num","direction","OUR","PAWN","enPassant","cellColor","BISHOP","this","tileIsOccupied","QUEEN","move","point","i","KNIGHT","ROOK","row","tileIsOccupiedByOpponent","tileIsOccupiedForPawns","getPlayers","a","fetch","response","json","player","addNewPlayer","body","method","headers","JSON","stringify","deletePlayer","id","getTurnQueue","count","updateTurnQueue","state","addPlayer","onlinePlayer","Date","now","name","axios","post","SET_GAME","SET_ONLINE_PLAYERS","SET_MOVES_ONE","SET_MOVES_TWO","ADD_MOVE_ONE","ADD_MOVE_TWO","PlAYER_ONE","PlAYER_TWO","PlAYER_ONLINE","addMoveTwo","moveData","payload","setOnlineGame","setOnlinePlayers","setMovesOne","setMovesTwo","setPlayerTwo","setPlayerOnline","startingBoardState","OPPONENT","cloneBoardState","map","el","socket","WebSocket","sendMessage","message","event","send","sendQueue","queue","data","dbReq","window","indexedDB","open","onupgradeneeded","target","result","createObjectStore","autoIncrement","onerror","errorCode","console","log","onsuccess","getSavedGameIndexedDB","setGameInfo","transaction","tx","objectStore","getAll","savedGame","gamers","time","movesCount","winner","savingGame","add","gameOver","setWin","setStart","boardActivator","setTimer","setTimeout","current","pointerEvents","searchActualPlayer","playerOnline","playerName","actualPlayer","numbers","letters","movesController","moveRecord","urlEl","onlineGame","dispatch","checkUpdatedMoves","moves","figure","url","sendDeskInfo","one","times","figures","two","ChessField","setActiveForBoard","setTurnQueue","setPieces","setPlayer","pieces","win","start","checkTurnQueue","useState","activePiece","setActivePiece","gridX","setGridX","gridY","setGridY","piecePosition","setPiecePosition","boardRef","useRef","rules","board","coordinate","expression","Math","floor","useSelector","game","getPlayersRed","useDispatch","allFigures","document","querySelectorAll","useEffect","onmousemove","checker","forEach","elem","split","coordinates","innerHTML","Number","idEl","findEl","moveDesk","setUpdatePieces","reduce","results","piece","abs","push","specialForOnlineGame","specialForOfflineGame","prev","combinedLogicForCurrentPiece","isEnPassantMove","validMode","currentPiece","setUpdatePiecesForEnPassantMove","pawnTransformation","removeProperty","dropPiece","e","chessboard","clientX","offsetLeft","clientY","offsetTop","zIndex","isValidMove","j","undefined","ref","onMouseMove","minX","minY","maxX","offsetWidth","maxY","offsetHeight","left","top","onMouseDown","element","classList","contains","onMouseUp","PlayerField","checkWinner","checkMove","checkLoss","colorOne","setColorOne","colorTwo","setColorTwo","players","playerOne","getColor","player__field","win__ico","src","alt","player__ava","background","moveHand__img","player__name","player__board","part__one","filter","figure__img","part__two","move__info","part__three","Winner","win__window","Preloader","waitTime","preloader__window","text","preloader","to","lobby__btn","Game","setMovesCount","waiting","setWaiting","loss","setLoss","setTime","setUpdatedMoves","timer","namePlayerOne","setNamePlayerOne","namePlayerTwo","setNamePlayerTwo","setActualPlayer","onlinePlayers","playersReady","refreshGame","onopen","onmessage","parse","length","setSocket","playerTwo","checkPlayers","setInterval","sendPlayer","clearInterval","startMatch","getOnlinePlayers","asyncEffect","interval","hours","minutes","seconds","admitLoss","sendLoss","onClick","replays__btn","loss__btn","start__btn","game__container","Replays","gameInfo","getInfoIndexedDb","repeats__container","repeats__block","chess__info","name__circle","win__marker","name__circle_2","moves__info","time__info","ChangeNameModal","active","setActive","setInput","setInput2","inputRef","modal","modal__disable","modal__inner","top__text","input__plus__text","input","change__btn","value","Modal","gameType","setGameType","closeModal","setCloseModal","setGame","localStorage","getItem","block__container","inactive__type","active__type","change__game__btn","Player","setModalActive","player__box","StartWindow","playerNum","modalActive","modalActiveOnline","setModalActiveOnline","inputOne","setInputOne","inputTwo","inputOnline","setInputOnline","playerNameInput","setStartState","setPlayerNameOnline","top__text_special","body__container","btns__container","network__info","view__btn","Body","path","Footer","footer__container","footer__text","href","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","playersState","initialMovesState","rootReducer","combineReducers","action","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.f3570fcb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"replays_App__1Bu3t\",\"green\":\"replays_green__1oc6q\",\"lobby__btn\":\"replays_lobby__btn__Qzd1X\",\"repeats__block\":\"replays_repeats__block__3AH6q\",\"chess__info\":\"replays_chess__info__3Zrmb\",\"info__inner\":\"replays_info__inner__2pGZY\",\"name__circle\":\"replays_name__circle__2nExb\",\"name__circle_2\":\"replays_name__circle_2__1Ef08\",\"win__marker\":\"replays_win__marker__1xFcG\",\"moves__info\":\"replays_moves__info__2rljH\",\"time__info\":\"replays_time__info__1yU90\",\"link\":\"replays_link__3MWy1\",\"chess__grid\":\"replays_chess__grid__Ubvan\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"header_App__3A4RW\",\"green\":\"header_green__1nBe4\",\"header__container\":\"header_header__container__2MMPN\",\"logo__img\":\"header_logo__img__2N6mY\",\"logo__text\":\"header_logo__text__1W2mO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"footer_App__1b2RE\",\"green\":\"footer_green__7RJS_\",\"footer__container\":\"footer_footer__container__14l6n\",\"footer__text\":\"footer_footer__text__1PMzD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"start-window_App__TNRlA\",\"green\":\"start-window_green__1XXnX\",\"body__container\":\"start-window_body__container__2bhoM\",\"player__box\":\"start-window_player__box__21NAk\",\"player__ava\":\"start-window_player__ava__2xFyR\",\"player__name\":\"start-window_player__name__EMY-m\",\"btns__container\":\"start-window_btns__container__2s-Ma\",\"start__btn\":\"start-window_start__btn__3yA-0\",\"network__info\":\"start-window_network__info__47baf\",\"view__btn\":\"start-window_view__btn__3gJXo\",\"modal\":\"start-window_modal__3KQ7Z\",\"modal__inner\":\"start-window_modal__inner__2bl8e\",\"top__text\":\"start-window_top__text__1QFyE\",\"top__text_special\":\"start-window_top__text_special__1te69\",\"input__plus__text\":\"start-window_input__plus__text__2k7ss\",\"input\":\"start-window_input__3VCFP\",\"text\":\"start-window_text__3Qid-\",\"change__btn\":\"start-window_change__btn__1t-U9\",\"block__container\":\"start-window_block__container__1HCMv\",\"inactive__type\":\"start-window_inactive__type__3FRA1\",\"active__type\":\"start-window_active__type__2y8h5\",\"change__game__btn\":\"start-window_change__game__btn__12jP6\",\"modal__disable\":\"start-window_modal__disable__15ckL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"game_App__24KvD\",\"green\":\"game_green__Nrz4g\",\"game__container\":\"game_game__container__teyyq\",\"timer\":\"game_timer__VvAaM\",\"loss__btn\":\"game_loss__btn__29kfA\",\"start__btn\":\"game_start__btn__5ko3d\",\"lobby__btn\":\"game_lobby__btn__R6lkK\",\"replays__btn\":\"game_replays__btn__1Cldm\",\"player__field\":\"game_player__field__1GWfh\",\"player__ava\":\"game_player__ava__1HIDw\",\"player__name\":\"game_player__name__1KpMX\",\"win__ico\":\"game_win__ico__2pJaq\",\"moveHand__img\":\"game_moveHand__img__3o6h1\",\"player__board\":\"game_player__board__3WoYE\",\"part__one\":\"game_part__one__1SRRX\",\"part__two\":\"game_part__two__1Ro3D\",\"part__three\":\"game_part__three__nJJ5k\",\"figure__img\":\"game_figure__img__2_HRK\",\"move__info\":\"game_move__info__1xZZB\",\"win__window\":\"game_win__window__3MOaU\",\"winWindow\":\"game_winWindow__3-Xtl\",\"preloader__window\":\"game_preloader__window__3uD10\",\"text\":\"game_text__3DRTo\",\"preloader\":\"game_preloader__EKtYp\"};","import { MoveDTO } from \"../redux/redux-types\";\r\n\r\nexport interface ModalProps {\r\n  number: number;\r\n  active: boolean;\r\n  setActive: React.Dispatch<React.SetStateAction<boolean>>;\r\n  setInput: React.Dispatch<React.SetStateAction<string>>;\r\n  setInput2: React.Dispatch<React.SetStateAction<string>>;\r\n}\r\n\r\nexport enum TeamType {\r\n  OPPONENT,\r\n  OUR,\r\n}\r\nexport enum PieceType {\r\n  PAWN,\r\n  BISHOP,\r\n  KNIGHT,\r\n  ROOK,\r\n  QUEEN,\r\n  KING,\r\n}\r\n\r\nexport interface Piece {\r\n  image: string;\r\n  x: number;\r\n  y: number;\r\n  type: PieceType;\r\n  cellColor?: string;\r\n  team: TeamType;\r\n  id: number;\r\n  enPassant?: boolean;\r\n}\r\n\r\nexport interface TileProps {\r\n  number: number;\r\n  image?: string;\r\n  position: string;\r\n  player?: boolean;\r\n  size?: number;\r\n}\r\n\r\nexport interface SocketProps {\r\n  event: string;\r\n  boardState: Piece[] | undefined;\r\n  players?: number;\r\n}\r\n\r\nexport interface SavedGame {\r\n  gamers: string[];\r\n  time: string;\r\n  movesCount: number;\r\n  winner: boolean;\r\n}\r\n\r\nexport interface WebSocketMessage {\r\n  event: string;\r\n  data: boolean | MoveDTO | string;\r\n}\r\n\r\nexport interface PlayerDTO {\r\n  name: string;\r\n  id: number;\r\n}\r\n\r\nexport interface PlayerProps {\r\n  num: number;\r\n  name: string;\r\n  setPlayer: React.Dispatch<React.SetStateAction<number>>;\r\n  setModalActive: React.Dispatch<React.SetStateAction<boolean>>;\r\n}\r\n\r\nexport type DatabaseErrorEvent = Event & { target: { errorCode: string } };\r\n","import { FC } from \"react\";\r\nimport s from \"./header.module.scss\";\r\n\r\nconst Header: FC = () => {\r\n  return (\r\n    <div className={s.header__container}>\r\n      <div className={s.logo__img}></div>\r\n      <div className={s.logo__text}></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import { FC } from \"react\";\r\nimport { TileProps } from \"../../../interfaces-enums\";\r\nimport \"./chess-field.scss\";\r\n\r\nconst Tile: FC<TileProps> = ({ number, image, position, size }) => {\r\n  if (number % 2 === 0) {\r\n    return (\r\n      <div className=\"black__field\">\r\n        {image && (\r\n          <div\r\n            style={{\r\n              backgroundImage: `url(${process.env.PUBLIC_URL + image})`,\r\n              width: `${size}px`,\r\n            }}\r\n            className=\"figure__img\"\r\n          >\r\n            {position}\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div className=\"white__field\">\r\n        {image && (\r\n          <div\r\n            style={{\r\n              backgroundImage: `url(${process.env.PUBLIC_URL + image})`,\r\n              width: `${size}px`,\r\n            }}\r\n            className=\"figure__img\"\r\n          >\r\n            {position}\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default Tile;\r\n","import {\r\n  DatabaseErrorEvent,\r\n  SavedGame,\r\n} from \"./../components/interfaces-enums\";\r\n\r\nexport let db: IDBDatabase;\r\nconst dbReq: IDBOpenDBRequest = window.indexedDB.open(\r\n  \"olegrabushko-JSFE2021Q1\",\r\n  1\r\n);\r\ndbReq.onupgradeneeded = (event) => {\r\n  db = (event.target as IDBOpenDBRequest).result;\r\n  db.createObjectStore(\"player\", { autoIncrement: true });\r\n};\r\n\r\ndbReq.onerror = (event: Event) => {\r\n  const { errorCode } = (event as DatabaseErrorEvent).target;\r\n  console.log(`error${errorCode}`);\r\n};\r\ndbReq.onsuccess = (event) => {\r\n  db = (event.target as IDBOpenDBRequest).result;\r\n};\r\n\r\nexport const getSavedGameIndexedDB = async (\r\n  setGameInfo: React.Dispatch<React.SetStateAction<SavedGame[]>>\r\n) => {\r\n  const tx = await db.transaction([\"player\"], \"readwrite\");\r\n  const store = await tx.objectStore(\"player\");\r\n  store.getAll().onsuccess = async (event: Event): Promise<void> => {\r\n    const data = await (event.target as IDBRequest).result;\r\n    if (data) {\r\n      setGameInfo(data);\r\n    } else {\r\n    }\r\n  };\r\n};\r\n","import { Piece, TeamType, PieceType } from \"../../../interfaces-enums\";\r\n\r\nclass Rules {\r\n  tileIsOccupiedForPawns(x: number, y: number, boardState: Piece[]): boolean {\r\n    const piece = boardState.find((p) => {\r\n      return p.x === x && p.y === y;\r\n    });\r\n    return piece ? true : false;\r\n  }\r\n\r\n  tileIsOccupied(\r\n    x: number,\r\n    y: number,\r\n    boardState: Piece[],\r\n    team: TeamType,\r\n    px?: number,\r\n    py?: number,\r\n    type?: PieceType\r\n  ): boolean {\r\n    const piece = boardState.find(\r\n      (p) => p.x === x && p.y === y && p.team === team\r\n    );\r\n    return piece ? true : false;\r\n  }\r\n  checkWin(x: number, y: number, boardState: Piece[]): boolean {\r\n    const piece = boardState.find(\r\n      (p) => p.x === x && p.y === y && p.type === PieceType.KING\r\n    );\r\n    return piece ? true : false;\r\n  }\r\n  tileIsOccupiedByOpponent(\r\n    x: number,\r\n    y: number,\r\n    boardState: Piece[],\r\n    team: TeamType\r\n  ): boolean {\r\n    const piece = boardState.find(\r\n      (p) => p.x === x && p.y === y && p.team !== team\r\n    );\r\n    return piece ? true : false;\r\n  }\r\n\r\n  checkMoveRook(\r\n    px: number,\r\n    x: number,\r\n    py: number,\r\n    y: number,\r\n    num: number\r\n  ): boolean {\r\n    return px - x === num && py - y === 0 ? true : false;\r\n  }\r\n  isEnPassantMove(\r\n    px: number,\r\n    py: number,\r\n    x: number,\r\n    y: number,\r\n    type: PieceType,\r\n    team: TeamType,\r\n    boardState: Piece[]\r\n  ) {\r\n    const direction = team === TeamType.OUR ? 1 : -1;\r\n    if (type === PieceType.PAWN) {\r\n      if ((px - x === 1 || px - x === -1) && py - y === direction) {\r\n        const piece = boardState.find(\r\n          (p) => p.x === x && p.y === y + direction && p.enPassant\r\n        );\r\n        if (piece) {\r\n          return true;\r\n        }\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  isValidMove(\r\n    px: number,\r\n    py: number,\r\n    x: number,\r\n    y: number,\r\n    type: PieceType,\r\n    team: TeamType,\r\n    boardState: Piece[],\r\n    cellColor: string | undefined\r\n  ) {\r\n    if (type === PieceType.BISHOP) {\r\n      const color =\r\n        cellColor === \"white\" ? (x + y) % 2 === 0 : (x + y) % 2 === 1;\r\n      if (color && px !== x && py !== y) {\r\n        if (!this.tileIsOccupied(x, y, boardState, team, px, py)) {\r\n          return true;\r\n        }\r\n      }\r\n    }\r\n\r\n    if (type === PieceType.KING) {\r\n      if (px - x === 1 || px - x === -1 || py - y === 1 || py - y === -1) {\r\n        if (!this.tileIsOccupied(x, y, boardState, team)) {\r\n          return true;\r\n        }\r\n      }\r\n    }\r\n\r\n    if (type === PieceType.QUEEN) {\r\n      const move = (num: number, point?: string) => {\r\n        if (point === \"-\") {\r\n          return px - x === -num && py - y === num ? true : false;\r\n        } else if (point === \"x\") {\r\n          return px - x === num && py - y === 0 ? true : false;\r\n        } else if (point === \"y\") {\r\n          return py - y === num && px - x === 0 ? true : false;\r\n        } else {\r\n          return px - x === num && py - y === num ? true : false;\r\n        }\r\n      };\r\n      for (let i = -7; i < 8; i++) {\r\n        if (\r\n          (move(i) || move(i, \"-\") || move(i, \"x\") || move(i, \"y\")) &&\r\n          !this.tileIsOccupied(x, y, boardState, team)\r\n        ) {\r\n          return true;\r\n        }\r\n      }\r\n    }\r\n\r\n    if (type === PieceType.KNIGHT) {\r\n      if (\r\n        (px - x === 1 && py - y === 2) ||\r\n        (px - x === -1 && py - y === -2) ||\r\n        (px - x === 1 && py - y === -2) ||\r\n        (px - x === -1 && py - y === 2) ||\r\n        (px - x === -2 && py - y === -1) ||\r\n        (px - x === 2 && py - y === 1) ||\r\n        (px - x === -2 && py - y === 1) ||\r\n        (px - x === 2 && py - y === -1)\r\n      ) {\r\n        if (!this.tileIsOccupied(x, y, boardState, team)) {\r\n          return true;\r\n        }\r\n      }\r\n    }\r\n\r\n    if (type === PieceType.ROOK) {\r\n      const move = (num: number, point: string) => {\r\n        if (point === \"x\") {\r\n          return px - x === num && py - y === 0 ? true : false;\r\n        } else {\r\n          return py - y === num && px - x === 0 ? true : false;\r\n        }\r\n      };\r\n      for (let i = -7; i < 8; i++) {\r\n        if (\r\n          (move(i, \"x\") || move(i, \"y\")) &&\r\n          !this.tileIsOccupied(x, y, boardState, team)\r\n        ) {\r\n          return true;\r\n        }\r\n      }\r\n    }\r\n\r\n    if (type === PieceType.PAWN) {\r\n      const row = team === TeamType.OUR ? 6 : 1;\r\n      const direction = team === TeamType.OUR ? 1 : -1;\r\n\r\n      // Attack logic\r\n      if (\r\n        (px - x === 1 && py - y === direction) ||\r\n        (px - x === -1 && py - y === direction)\r\n      ) {\r\n        if (this.tileIsOccupiedByOpponent(x, y, boardState, team)) {\r\n          return true;\r\n        }\r\n      } //Movement logic\r\n      else if (py === row) {\r\n        if (\r\n          px === x &&\r\n          py - y === 1 * direction &&\r\n          !this.tileIsOccupiedForPawns(x, y, boardState)\r\n        ) {\r\n          return true;\r\n        } else if (\r\n          px === x &&\r\n          py - y === 2 * direction &&\r\n          !this.tileIsOccupiedForPawns(x, y, boardState) &&\r\n          !this.tileIsOccupiedForPawns(x, y + 1 * direction, boardState)\r\n        ) {\r\n          return true;\r\n        }\r\n      } else if (\r\n        px === x &&\r\n        py - y === 1 * direction &&\r\n        !this.tileIsOccupiedForPawns(x, y, boardState)\r\n      ) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n}\r\n\r\nexport default Rules;\r\n","import axios from \"axios\";\r\nimport { PlayerDTO } from \"../components/interfaces-enums\";\r\n\r\nexport const getPlayers = async (): Promise<PlayerDTO[]> => {\r\n  const response = await fetch(\"http://localhost:3002/state\");\r\n  const player = await response.json();\r\n  return player;\r\n};\r\n\r\nexport const addNewPlayer = async (body: PlayerDTO) => {\r\n  const response = await fetch(\"http://localhost:3002/state\", {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify(body),\r\n  });\r\n  const player = await response.json();\r\n  return player;\r\n};\r\n\r\nexport const deletePlayers = async () => {\r\n  const response: Response = await fetch(\"http://localhost:3002/state\", {\r\n    method: \"DELETE\",\r\n  });\r\n  const player = await response.json();\r\n  return player;\r\n};\r\nexport const deletePlayer = async (id: number) => {\r\n  const response: Response = await fetch(`http://localhost:3002/state/${id}`, {\r\n    method: \"DELETE\",\r\n  });\r\n  const player = await response.json();\r\n  return player;\r\n};\r\n\r\nexport const getTurnQueue = async () => {\r\n  const response = await fetch(\"http://localhost:3002/state/queue\");\r\n  const count = await response.json();\r\n  return count;\r\n};\r\n\r\nexport const updateTurnQueue = async (state: boolean) => {\r\n  const response = await fetch(\"http://localhost:3002/state/queue\", {\r\n    method: \"PUT\",\r\n    headers: {\r\n      \"Content-type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify([state]),\r\n  });\r\n  const count = await response.json();\r\n  return count;\r\n};\r\n\r\nexport const addPlayer = async (onlinePlayer: string) => {\r\n  await addNewPlayer({\r\n    name: await onlinePlayer,\r\n    id: Date.now(),\r\n  });\r\n  await axios.post(\"http://localhost:3002/new-player\");\r\n};\r\n","import {\r\n  OnlineGameProps,\r\n  OnlinePlayersProps,\r\n  MoveDeskProps,\r\n  Move,\r\n  MoveDTO,\r\n  PlayersProps,\r\n} from \"./redux-types\";\r\n\r\nexport const SET_GAME = \"SET_GAME\";\r\nexport const SET_ONLINE_PLAYERS = \"SET_ONLINE_PLAYERS\";\r\nexport const SET_MOVES_ONE = \"SET_MOVES_ONE\";\r\nexport const SET_MOVES_TWO = \"SET_MOVES_TWO\";\r\nexport const ADD_MOVE_ONE = \"ADD_MOVE_ONE\";\r\nexport const ADD_MOVE_TWO = \"ADD_MOVE_TWO\";\r\nexport const PlAYER_ONE = \"PlAYER_ONE\";\r\nexport const PlAYER_TWO = \"PlAYER_TWO\";\r\nexport const PlAYER_ONLINE = \"PlAYER_ONLINE\";\r\n\r\nexport const addMoveOne = (moveData: MoveDTO): MoveDeskProps => ({\r\n  type: ADD_MOVE_ONE,\r\n  payload: moveData,\r\n});\r\nexport const addMoveTwo = (moveData: MoveDTO): MoveDeskProps => ({\r\n  type: ADD_MOVE_TWO,\r\n  payload: moveData,\r\n});\r\nexport const setOnlineGame = (count: boolean): OnlineGameProps => ({\r\n  type: SET_GAME,\r\n  payload: count,\r\n});\r\nexport const setOnlinePlayers = (count: boolean): OnlinePlayersProps => ({\r\n  type: SET_ONLINE_PLAYERS,\r\n  payload: count,\r\n});\r\n/////\r\nexport const setMovesOne = (count: Move): MoveDeskProps => ({\r\n  type: SET_MOVES_ONE,\r\n  payload: count,\r\n});\r\nexport const setMovesTwo = (count: Move): MoveDeskProps => ({\r\n  type: SET_MOVES_TWO,\r\n  payload: count,\r\n});\r\n////\r\nexport const setPlayerOne = (count: string): PlayersProps => ({\r\n  type: PlAYER_ONE,\r\n  payload: count,\r\n});\r\nexport const setPlayerTwo = (count: string): PlayersProps => ({\r\n  type: PlAYER_TWO,\r\n  payload: count,\r\n});\r\nexport const setPlayerOnline = (count: string): PlayersProps => ({\r\n  type: PlAYER_ONLINE,\r\n  payload: count,\r\n});\r\n","import { Piece, PieceType, TeamType } from \"../../../interfaces-enums\";\r\n\r\nexport const startingBoardState: Piece[] = [\r\n  {\r\n    image: `/assets/imgs/w-king.png`,\r\n    x: 4,\r\n    y: 7,\r\n    type: PieceType.KING,\r\n    team: TeamType.OUR,\r\n    id: 1,\r\n  },\r\n  {\r\n    image: `/assets/imgs/w-queen.png`,\r\n    x: 3,\r\n    y: 7,\r\n    type: PieceType.QUEEN,\r\n    team: TeamType.OUR,\r\n    id: 2,\r\n  },\r\n  {\r\n    image: `/assets/imgs/w-pawn.png`,\r\n    x: 0,\r\n    y: 6,\r\n    type: PieceType.PAWN,\r\n    team: TeamType.OUR,\r\n    id: 3,\r\n  },\r\n  {\r\n    image: `/assets/imgs/w-pawn.png`,\r\n    x: 1,\r\n    y: 6,\r\n    type: PieceType.PAWN,\r\n    team: TeamType.OUR,\r\n    id: 4,\r\n  },\r\n  {\r\n    image: `/assets/imgs/w-pawn.png`,\r\n    x: 2,\r\n    y: 6,\r\n    type: PieceType.PAWN,\r\n    team: TeamType.OUR,\r\n    id: 5,\r\n  },\r\n  {\r\n    image: `/assets/imgs/w-pawn.png`,\r\n    x: 3,\r\n    y: 6,\r\n    type: PieceType.PAWN,\r\n    team: TeamType.OUR,\r\n    id: 6,\r\n  },\r\n  {\r\n    image: `/assets/imgs/w-pawn.png`,\r\n    x: 4,\r\n    y: 6,\r\n    type: PieceType.PAWN,\r\n    team: TeamType.OUR,\r\n    id: 7,\r\n  },\r\n  {\r\n    image: `/assets/imgs/w-pawn.png`,\r\n    x: 5,\r\n    y: 6,\r\n    type: PieceType.PAWN,\r\n    team: TeamType.OUR,\r\n    id: 8,\r\n  },\r\n  {\r\n    image: `/assets/imgs/w-pawn.png`,\r\n    x: 6,\r\n    y: 6,\r\n    type: PieceType.PAWN,\r\n    team: TeamType.OUR,\r\n    id: 9,\r\n  },\r\n  {\r\n    image: `/assets/imgs/w-pawn.png`,\r\n    x: 7,\r\n    y: 6,\r\n    type: PieceType.PAWN,\r\n    team: TeamType.OUR,\r\n    id: 10,\r\n  },\r\n  {\r\n    image: \"/assets/imgs/w-knight.png\",\r\n    x: 1,\r\n    y: 7,\r\n    type: PieceType.KNIGHT,\r\n    team: TeamType.OUR,\r\n    id: 11,\r\n  },\r\n  {\r\n    image: \"/assets/imgs/w-knight.png\",\r\n    x: 6,\r\n    y: 7,\r\n    type: PieceType.KNIGHT,\r\n    team: TeamType.OUR,\r\n    id: 12,\r\n  },\r\n  {\r\n    image: \"/assets/imgs/w-rook.png\",\r\n    x: 0,\r\n    y: 7,\r\n    type: PieceType.ROOK,\r\n    team: TeamType.OUR,\r\n    id: 13,\r\n  },\r\n  {\r\n    image: \"/assets/imgs/w-rook.png\",\r\n    x: 7,\r\n    y: 7,\r\n    type: PieceType.ROOK,\r\n    team: TeamType.OUR,\r\n    id: 14,\r\n  },\r\n  {\r\n    image: \"/assets/imgs/w-bishop.png\",\r\n    x: 2,\r\n    y: 7,\r\n    type: PieceType.BISHOP,\r\n    team: TeamType.OUR,\r\n    cellColor: \"black\",\r\n    id: 15,\r\n  },\r\n  {\r\n    image: \"/assets/imgs/w-bishop.png\",\r\n    x: 5,\r\n    y: 7,\r\n    type: PieceType.BISHOP,\r\n    team: TeamType.OUR,\r\n    cellColor: \"white\",\r\n    id: 16,\r\n  },\r\n  {\r\n    image: `/assets/imgs/b-king.png`,\r\n    x: 4,\r\n    y: 0,\r\n    type: PieceType.KING,\r\n    team: TeamType.OPPONENT,\r\n    id: 17,\r\n  },\r\n  {\r\n    image: `/assets/imgs/b-queen.png`,\r\n    x: 3,\r\n    y: 0,\r\n    type: PieceType.QUEEN,\r\n    team: TeamType.OPPONENT,\r\n    id: 18,\r\n  },\r\n  {\r\n    image: `/assets/imgs/b-pawn.png`,\r\n    x: 0,\r\n    y: 1,\r\n    type: PieceType.PAWN,\r\n    team: TeamType.OPPONENT,\r\n    id: 19,\r\n  },\r\n  {\r\n    image: `/assets/imgs/b-pawn.png`,\r\n    x: 1,\r\n    y: 1,\r\n    type: PieceType.PAWN,\r\n    team: TeamType.OPPONENT,\r\n    id: 20,\r\n  },\r\n  {\r\n    image: `/assets/imgs/b-pawn.png`,\r\n    x: 2,\r\n    y: 1,\r\n    type: PieceType.PAWN,\r\n    team: TeamType.OPPONENT,\r\n    id: 21,\r\n  },\r\n  {\r\n    image: `/assets/imgs/b-pawn.png`,\r\n    x: 3,\r\n    y: 1,\r\n    type: PieceType.PAWN,\r\n    team: TeamType.OPPONENT,\r\n    id: 22,\r\n  },\r\n  {\r\n    image: `/assets/imgs/b-pawn.png`,\r\n    x: 4,\r\n    y: 1,\r\n    type: PieceType.PAWN,\r\n    team: TeamType.OPPONENT,\r\n    id: 23,\r\n  },\r\n  {\r\n    image: `/assets/imgs/b-pawn.png`,\r\n    x: 5,\r\n    y: 1,\r\n    type: PieceType.PAWN,\r\n    team: TeamType.OPPONENT,\r\n    id: 24,\r\n  },\r\n  {\r\n    image: `/assets/imgs/b-pawn.png`,\r\n    x: 6,\r\n    y: 1,\r\n    type: PieceType.PAWN,\r\n    team: TeamType.OPPONENT,\r\n    id: 25,\r\n  },\r\n  {\r\n    image: `/assets/imgs/b-pawn.png`,\r\n    x: 7,\r\n    y: 1,\r\n    type: PieceType.PAWN,\r\n    team: TeamType.OPPONENT,\r\n    id: 26,\r\n  },\r\n  {\r\n    image: `/assets/imgs/b-knight.png`,\r\n    x: 6,\r\n    y: 0,\r\n    type: PieceType.KNIGHT,\r\n    team: TeamType.OPPONENT,\r\n    id: 27,\r\n  },\r\n  {\r\n    image: `/assets/imgs/b-knight.png`,\r\n    x: 1,\r\n    y: 0,\r\n    type: PieceType.KNIGHT,\r\n    team: TeamType.OPPONENT,\r\n    id: 28,\r\n  },\r\n  {\r\n    image: `/assets/imgs/b-rook.png`,\r\n    x: 7,\r\n    y: 0,\r\n    type: PieceType.ROOK,\r\n    team: TeamType.OPPONENT,\r\n    id: 29,\r\n  },\r\n  {\r\n    image: `/assets/imgs/b-rook.png`,\r\n    x: 0,\r\n    y: 0,\r\n    type: PieceType.ROOK,\r\n    team: TeamType.OPPONENT,\r\n    id: 30,\r\n  },\r\n  {\r\n    image: `/assets/imgs/b-bishop.png`,\r\n    x: 2,\r\n    y: 0,\r\n    type: PieceType.BISHOP,\r\n    team: TeamType.OPPONENT,\r\n    cellColor: \"white\",\r\n    id: 31,\r\n  },\r\n  {\r\n    image: `/assets/imgs/b-bishop.png`,\r\n    x: 5,\r\n    y: 0,\r\n    type: PieceType.BISHOP,\r\n    team: TeamType.OPPONENT,\r\n    cellColor: \"black\",\r\n    id: 32,\r\n  },\r\n];\r\n\r\nexport const cloneBoardState = () =>\r\n  startingBoardState.map((el) => ({ ...el }));\r\n","import { OnlinePlayersProps } from \"./../redux/redux-types\";\r\nimport { setOnlinePlayers } from \"./../redux/actions\";\r\nimport { SocketProps, WebSocketMessage } from \"../components/interfaces-enums\";\r\nimport { addMoveOne, addMoveTwo } from \"../redux/actions\";\r\nimport { Piece } from \"../components/interfaces-enums\";\r\nimport { cloneBoardState } from \"../components/body/game/chess-field/chessboard-state\";\r\nimport { Dispatch } from \"react\";\r\nimport { MoveDeskProps } from \"../redux/redux-types\";\r\nimport { getPlayers, getTurnQueue } from \"./server\";\r\n\r\nexport const socket = new WebSocket(\"ws://localhost:3001\");\r\n\r\nexport const sendMessage = async (state: Piece[]) => {\r\n  const message: SocketProps = {\r\n    event: \"check-chessboard\",\r\n    boardState: state,\r\n  };\r\n  socket.send(JSON.stringify(message));\r\n};\r\n\r\nexport const setSocket = (\r\n  setPieces: React.Dispatch<React.SetStateAction<Piece[]>>,\r\n  dispatch: Dispatch<MoveDeskProps | OnlinePlayersProps>,\r\n  setTurnQueue: React.Dispatch<React.SetStateAction<boolean>>,\r\n  setLoss: React.Dispatch<React.SetStateAction<boolean>>,\r\n  refreshGame: () => void\r\n) => {\r\n  socket.onopen = () => {\r\n    const boardState: SocketProps = {\r\n      event: \"check-chessboard\",\r\n      boardState: cloneBoardState(),\r\n    };\r\n\r\n    socket.send(JSON.stringify(boardState));\r\n  };\r\n\r\n  socket.onmessage = async (event) => {\r\n    const queue = await getTurnQueue();\r\n    const message = JSON.parse(event.data);\r\n    if (message.event === \"check-chessboard\") {\r\n      setPieces(message.boardState);\r\n    }\r\n    if (message.event === \"queue\") {\r\n      setTurnQueue((prev: boolean) => !prev);\r\n    }\r\n    if (message.event === \"loss\") {\r\n      setLoss(true);\r\n      refreshGame();\r\n    }\r\n    if (message.event === \"players\") {\r\n      const players = await getPlayers();\r\n      if (players.length > 1) {\r\n        dispatch(setOnlinePlayers(true));\r\n      }\r\n    }\r\n    if (message.event === \"move-message\") {\r\n      dispatch(queue ? addMoveOne(message.data) : addMoveTwo(message.data));\r\n    }\r\n  };\r\n};\r\n\r\nexport const sendQueue = (queue: boolean) => {\r\n  const message: WebSocketMessage = {\r\n    event: \"queue\",\r\n    data: queue,\r\n  };\r\n  socket.send(JSON.stringify(message));\r\n};\r\nexport const sendLoss = (loss: boolean) => {\r\n  const message: WebSocketMessage = {\r\n    event: \"loss\",\r\n    data: loss,\r\n  };\r\n  socket.send(JSON.stringify(message));\r\n};\r\nexport const sendPlayer = (player: boolean) => {\r\n  const message: WebSocketMessage = {\r\n    event: \"players\",\r\n    data: player,\r\n  };\r\n  socket.send(JSON.stringify(message));\r\n};\r\n\r\nexport const sendDeskInfo = (move: string, time: string, figure: string) => {\r\n  const message: WebSocketMessage = {\r\n    event: \"move-message\",\r\n    data: { move: move, time: time, url: figure },\r\n  };\r\n  socket.send(JSON.stringify(message));\r\n};\r\n","import { getPlayers, getTurnQueue } from \"../../../../api/server\";\r\nimport { db } from \"../../../../indexedDb/indexedDb\";\r\nimport { SavedGame } from \"../../../interfaces-enums\";\r\n\r\nexport const savedGame: SavedGame = {\r\n  gamers: [],\r\n  time: \"\",\r\n  movesCount: 0,\r\n  winner: true,\r\n};\r\n\r\nexport const savingGame = () => {\r\n  let transaction = db.transaction([\"player\"], \"readwrite\");\r\n  let inventory = transaction.objectStore(\"player\");\r\n  inventory.add(savedGame);\r\n};\r\n\r\nexport const gameOver = async (\r\n  setWin: React.Dispatch<React.SetStateAction<boolean>>,\r\n  setStart: React.Dispatch<React.SetStateAction<boolean>>,\r\n  boardActivator: React.RefObject<HTMLDivElement> | null,\r\n  setTimer: React.Dispatch<React.SetStateAction<boolean>>\r\n) => {\r\n  setTimeout(() => {\r\n    savingGame();\r\n    setTimer(true);\r\n    setStart(false);\r\n    setWin(true);\r\n    boardActivator!.current!.style.pointerEvents = \"none\";\r\n  }, 1000);\r\n};\r\n\r\nexport const searchActualPlayer = async (playerOnline: string) => {\r\n  const queue = await getTurnQueue();\r\n  const player = await getPlayers();\r\n  const playerName = playerOnline;\r\n  const actualPlayer = !queue ? 0 : 1;\r\n  return player[actualPlayer].name === playerName;\r\n};\r\n","import { Dispatch } from \"react\";\r\nimport { sendDeskInfo } from \"../../../../api/webSocket\";\r\nimport { setMovesOne, setMovesTwo } from \"../../../../redux/actions\";\r\nimport { MoveDeskProps, MovesState } from \"../../../../redux/redux-types\";\r\n\r\nexport const numbers: number[] = [8, 7, 6, 5, 4, 3, 2, 1];\r\nexport const letters: string[] = [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\"];\r\n\r\nexport const movesController = (\r\n  moveRecord: string,\r\n  urlEl: string,\r\n  time: string,\r\n  onlineGame: boolean,\r\n  dispatch: Dispatch<MoveDeskProps>,\r\n  player: boolean,\r\n  checkUpdatedMoves: boolean,\r\n  moves: MovesState\r\n) => {\r\n  if (onlineGame) {\r\n    sendDeskInfo(moveRecord, time, urlEl);\r\n  } else {\r\n    if (player && !checkUpdatedMoves) {\r\n      dispatch(\r\n        setMovesOne({\r\n          moves: [...moves.one.moves, moveRecord],\r\n          times: [...moves.one.times, time],\r\n          figures: [...moves.one.figures, urlEl],\r\n        })\r\n      );\r\n    } else if (!player && !checkUpdatedMoves) {\r\n      dispatch(\r\n        setMovesTwo({\r\n          moves: [...moves.two.moves, moveRecord],\r\n          times: [...moves.two.times, time],\r\n          figures: [...moves.two.figures, urlEl],\r\n        })\r\n      );\r\n    }\r\n  }\r\n};\r\n","import Tile from \"./tile\";\r\nimport \"./chess-field.scss\";\r\nimport { FC, useEffect, useRef, useState } from \"react\";\r\nimport Rules from \"../rules/rules\";\r\nimport { Piece, PieceType, TeamType } from \"../../../interfaces-enums\";\r\nimport {\r\n  getPlayers,\r\n  getTurnQueue,\r\n  updateTurnQueue,\r\n} from \"../../../../api/server\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { RootState } from \"../../../../redux\";\r\nimport { sendMessage, sendQueue } from \"../../../../api/webSocket\";\r\nimport { gameOver } from \"../helpers/helper\";\r\nimport { letters, movesController, numbers } from \"./chess-field-helper\";\r\n\r\ninterface ChessFieldProps {\r\n  setWin: React.Dispatch<React.SetStateAction<boolean>>;\r\n  setStart: React.Dispatch<React.SetStateAction<boolean>>;\r\n  setActiveForBoard: React.Dispatch<\r\n    React.SetStateAction<React.RefObject<HTMLDivElement> | null>\r\n  >;\r\n  setTimer: React.Dispatch<React.SetStateAction<boolean>>;\r\n  setPieces: React.Dispatch<React.SetStateAction<Piece[]>>;\r\n  setPlayer: React.Dispatch<React.SetStateAction<boolean>>;\r\n  setTurnQueue: React.Dispatch<React.SetStateAction<boolean>>;\r\n  pieces: Piece[];\r\n  player: boolean;\r\n  checkUpdatedMoves: boolean;\r\n  win: boolean;\r\n  start: boolean;\r\n  boardActivator: React.RefObject<HTMLDivElement> | null;\r\n  time: string;\r\n  checkTurnQueue: boolean;\r\n}\r\n\r\nconst ChessField: FC<ChessFieldProps> = ({\r\n  setWin,\r\n  setActiveForBoard,\r\n  setTurnQueue,\r\n  setStart,\r\n  setPieces,\r\n  setTimer,\r\n  setPlayer,\r\n  pieces,\r\n  player,\r\n  boardActivator,\r\n  checkUpdatedMoves,\r\n  win,\r\n  start,\r\n  time,\r\n  checkTurnQueue,\r\n}) => {\r\n  const [activePiece, setActivePiece] = useState<HTMLElement | null>(null);\r\n  const [gridX, setGridX] = useState(0);\r\n  const [gridY, setGridY] = useState(0);\r\n  const [piecePosition, setPiecePosition] = useState<HTMLElement | null>(null);\r\n  const boardRef = useRef<HTMLDivElement>(null);\r\n  const rules = new Rules();\r\n  const board: JSX.Element[] = [];\r\n  const coordinate = (expression: number) => Math.floor(expression / 100);\r\n  const onlineGame = useSelector((state: RootState) => state.game.onlineGame);\r\n  const getPlayersRed = useSelector((state: RootState) => state.player);\r\n  const dispatch = useDispatch();\r\n  const moves = useSelector((state: RootState) => state.moves);\r\n  const allFigures = document.querySelectorAll(\".figure__img\");\r\n\r\n  useEffect(() => {\r\n    setActiveForBoard(boardRef);\r\n  }, []);\r\n\r\n  document.onmousemove = async () => {\r\n    const queue = await getTurnQueue();\r\n    const player = await getPlayers();\r\n    const playerName = getPlayersRed.playerOnline;\r\n    const searchActualPlayer = (await !queue) ? 0 : 1;\r\n    let checker = (onlineGame ? !queue : !checkTurnQueue) ? \"b\" : \"w\";\r\n    if (start) {\r\n      allFigures.forEach((el) => {\r\n        const elem = el as HTMLDivElement;\r\n        if (onlineGame && player[searchActualPlayer].name !== playerName) {\r\n          elem.style.pointerEvents = \"none\";\r\n        } else {\r\n          if (\r\n            elem.style.backgroundImage.split(\"/\")[4].split(\"\")[0] === checker\r\n          ) {\r\n            elem.style.pointerEvents = \"none\";\r\n          } else {\r\n            elem.style.pointerEvents = \"auto\";\r\n          }\r\n        }\r\n      });\r\n    } else {\r\n      allFigures.forEach(\r\n        (el) => ((el as HTMLDivElement).style.pointerEvents = \"none\")\r\n      );\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const moveDesk = async () => {\r\n      let checker = 0;\r\n      pieces.forEach((el) => {\r\n        if (el.type === PieceType.KING) {\r\n          checker++;\r\n        }\r\n      });\r\n      if (checker < 2) {\r\n        gameOver(setWin, setStart, boardActivator, setTimer);\r\n      }\r\n\r\n      if (piecePosition) {\r\n        const coordinates = piecePosition.innerHTML.split(\",\");\r\n        const x = Number(coordinates[0]);\r\n        const y = Number(coordinates[1]);\r\n        const idEl = Number(coordinates[2]);\r\n        const urlEl = piecePosition.style.backgroundImage\r\n          .split(`\\\"`)[1]\r\n          .split(`/Chess`)[1];\r\n        const findEl = pieces.find(\r\n          (el) => el.image === urlEl && el.id === idEl\r\n        );\r\n        if (findEl && !win) {\r\n          const moveRecord = `${letters[x]}${numbers[y]}-${letters[findEl.x]}${\r\n            numbers[findEl.y]\r\n          }`;\r\n\r\n          movesController(\r\n            moveRecord,\r\n            urlEl,\r\n            time,\r\n            onlineGame,\r\n            dispatch,\r\n            player,\r\n            checkUpdatedMoves,\r\n            moves\r\n          );\r\n        }\r\n      }\r\n    };\r\n    moveDesk();\r\n  }, [pieces]);\r\n\r\n  const grabPiece = (e: React.MouseEvent) => {\r\n    const chessboard = boardRef.current;\r\n    const element = e.target as HTMLElement;\r\n    setPiecePosition(element);\r\n\r\n    if (element.classList.contains(\"figure__img\") && chessboard) {\r\n      const gridX = coordinate(e.clientX - chessboard.offsetLeft);\r\n      const gridY = coordinate(e.clientY - chessboard.offsetTop);\r\n\r\n      setGridX(gridX);\r\n      setGridY(gridY);\r\n      setActivePiece(element);\r\n    }\r\n  };\r\n\r\n  const movePiece = (e: React.MouseEvent) => {\r\n    const chessboard = boardRef.current;\r\n\r\n    if (activePiece && chessboard) {\r\n      const minX = chessboard.offsetLeft - 10;\r\n      const minY = chessboard.offsetTop + 3;\r\n      const maxX = chessboard.offsetLeft + chessboard.offsetWidth - 65;\r\n      const maxY = chessboard.offsetTop + chessboard.offsetHeight - 83;\r\n      let x = e.clientX - 40;\r\n      let y = e.clientY - 40;\r\n      activePiece.style.position = \"absolute\";\r\n\r\n      if (x < minX) {\r\n        activePiece.style.left = `${minX}px`;\r\n      } else if (x > maxX) {\r\n        activePiece.style.left = `${maxX}px`;\r\n      } else {\r\n        activePiece.style.left = `${x}px`;\r\n      }\r\n      if (y < minY) {\r\n        activePiece.style.top = `${minY}px`;\r\n      } else if (y > maxY) {\r\n        activePiece.style.top = `${maxY}px`;\r\n      } else {\r\n        activePiece.style.top = `${y}px`;\r\n      }\r\n    }\r\n  };\r\n\r\n  const setUpdatePieces = (x: number, y: number) => {\r\n    const updatePieces = pieces.reduce((results, piece) => {\r\n      if (piece.x === gridX && piece.y === gridY) {\r\n        if (Math.abs(gridY - y) === 2 && piece.type === PieceType.PAWN) {\r\n          piece.enPassant = true;\r\n        } else {\r\n          piece.enPassant = false;\r\n        }\r\n        piece.x = x;\r\n        piece.y = y;\r\n        results.push(piece);\r\n      } else if (!(piece.x === x && piece.y === y)) {\r\n        if (piece.type === PieceType.PAWN) {\r\n          piece.enPassant = false;\r\n        }\r\n        results.push(piece);\r\n      }\r\n      return results;\r\n    }, [] as Piece[]);\r\n    return updatePieces;\r\n  };\r\n\r\n  const setUpdatePiecesForEnPassantMove = (\r\n    x: number,\r\n    y: number,\r\n    direction: number\r\n  ) => {\r\n    const updatePieces = pieces.reduce((results, piece) => {\r\n      if (piece.x === gridX && piece.y === gridY) {\r\n        piece.enPassant = false;\r\n        piece.x = x;\r\n        piece.y = y;\r\n        results.push(piece);\r\n      } else if (!(piece.x === x && piece.y === y + direction)) {\r\n        if (piece.type === PieceType.PAWN) {\r\n          piece.enPassant = false;\r\n        }\r\n        results.push(piece);\r\n      }\r\n      return results;\r\n    }, [] as Piece[]);\r\n    return updatePieces;\r\n  };\r\n\r\n  const pawnTransformation = (y: number, currentPiece: Piece) => {\r\n    if (currentPiece!.type === PieceType.PAWN && (y === 0 || y === 7)) {\r\n      const team = y === 0 ? \"w\" : \"b\";\r\n      currentPiece.type = PieceType.QUEEN;\r\n      currentPiece.image = `/assets/imgs/${team}-queen.png`;\r\n    }\r\n  };\r\n\r\n  const specialForOnlineGame = async (x: number, y: number) => {\r\n    const queue = await getTurnQueue();\r\n    queue ? updateTurnQueue(false) : updateTurnQueue(true);\r\n    sendQueue(checkTurnQueue);\r\n    sendMessage(setUpdatePieces(x, y));\r\n  };\r\n\r\n  const specialForOfflineGame = async (x: number, y: number) => {\r\n    setPieces(setUpdatePieces(x, y));\r\n    checkTurnQueue ? setTurnQueue(false) : setTurnQueue(true);\r\n    setPlayer((prev) => !prev);\r\n  };\r\n\r\n  const activePieceStyles = () => {\r\n    activePiece!.style.position = \"relative\";\r\n    activePiece!.style.removeProperty(\"top\");\r\n    activePiece!.style.removeProperty(\"left\");\r\n  };\r\n\r\n  const combinedLogicForCurrentPiece = (\r\n    x: number,\r\n    y: number,\r\n    direction: number,\r\n    isEnPassantMove: boolean,\r\n    validMode: boolean,\r\n    currentPiece: Piece\r\n  ) => {\r\n    if (isEnPassantMove) {\r\n      setPieces(setUpdatePiecesForEnPassantMove(x, y, direction));\r\n    } else if (validMode) {\r\n      pawnTransformation(y, currentPiece);\r\n      if (onlineGame) {\r\n        specialForOnlineGame(x, y);\r\n      } else {\r\n        specialForOfflineGame(x, y);\r\n      }\r\n    } else {\r\n      activePieceStyles();\r\n    }\r\n  };\r\n\r\n  const dropPiece = async (e: React.MouseEvent) => {\r\n    const chessboard = boardRef.current;\r\n    if (activePiece && chessboard) {\r\n      const x = coordinate(e.clientX - chessboard.offsetLeft);\r\n      const y = coordinate(e.clientY - chessboard.offsetTop);\r\n      const currentPiece = pieces.find((p) => p.x === gridX && p.y === gridY);\r\n      if (currentPiece) {\r\n        const direction = currentPiece.team === TeamType.OUR ? 1 : -1;\r\n        activePiece.style.zIndex = \"10\";\r\n        const validMode = rules.isValidMove(\r\n          gridX,\r\n          gridY,\r\n          x,\r\n          y,\r\n          currentPiece.type,\r\n          currentPiece.team,\r\n          pieces,\r\n          currentPiece.cellColor\r\n        );\r\n        const isEnPassantMove = rules.isEnPassantMove(\r\n          gridX,\r\n          gridY,\r\n          x,\r\n          y,\r\n          currentPiece.type,\r\n          currentPiece.team,\r\n          pieces\r\n        );\r\n        combinedLogicForCurrentPiece(\r\n          x,\r\n          y,\r\n          direction,\r\n          isEnPassantMove,\r\n          validMode,\r\n          currentPiece\r\n        );\r\n      }\r\n      activePiece.style.zIndex = \"1\";\r\n      setActivePiece(null);\r\n    }\r\n  };\r\n\r\n  for (let i = 0; i < 8; i++) {\r\n    for (let j = 0; j < 8; j++) {\r\n      let id = undefined;\r\n      let image = undefined;\r\n      let number = numbers[i] + j + 1;\r\n      pieces.forEach((p) => {\r\n        if (p.x === j && p.y === i) {\r\n          id = p.id;\r\n          image = p.image;\r\n        }\r\n      });\r\n      board.push(\r\n        <Tile\r\n          key={`${i},${j}`}\r\n          image={image}\r\n          number={number}\r\n          position={`${j},${i},${id}`}\r\n          player={player}\r\n        />\r\n      );\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"chess__container\">\r\n        <div className=\"chess__letters\">\r\n          {letters.map((el, i) => (\r\n            <div key={i} className=\"chess__letter\">\r\n              {el}\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <div className=\"chess__inner\">\r\n          <div className=\"chess__numbers\">\r\n            {numbers.map((el, i) => (\r\n              <div key={i} className=\"chess__number\">\r\n                {el}\r\n              </div>\r\n            ))}\r\n          </div>\r\n          <div\r\n            ref={boardRef}\r\n            onMouseMove={movePiece}\r\n            onMouseDown={grabPiece}\r\n            onMouseUp={dropPiece}\r\n            className=\"chess__grid\"\r\n          >\r\n            {board}\r\n          </div>\r\n          <div className=\"chess__numbers__2\">\r\n            {numbers.map((el, i) => (\r\n              <div key={i} className=\"chess__number__2\">\r\n                {el}\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n        <div className=\"chess__letters\">\r\n          {letters.map((el, i) => (\r\n            <div key={i} className=\"chess__letter\">\r\n              {el}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ChessField;\r\n","import { FC, useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { RootState } from \"../../../../redux\";\r\nimport { getPlayers } from \"../../../../api/server\";\r\nimport s from \"./../game.module.scss\";\r\n\r\ninterface Player {\r\n  checkWinner: boolean;\r\n  checkLoss: boolean;\r\n  id: number;\r\n  name: string;\r\n  checkMove: boolean;\r\n}\r\n\r\nconst PlayerField: FC<Player> = ({\r\n  checkWinner,\r\n  id,\r\n  name,\r\n  checkMove,\r\n  checkLoss,\r\n}) => {\r\n  const [colorOne, setColorOne] = useState(\"\");\r\n  const [colorTwo, setColorTwo] = useState(\"\");\r\n  const getPlayersRed = useSelector((state: RootState) => state.player);\r\n  const onlineGame = useSelector((state: RootState) => state.game.onlineGame);\r\n  const moves = useSelector((state: RootState) =>\r\n    id === 1 ? state.moves.one : state.moves.two\r\n  );\r\n\r\n  useEffect(() => {\r\n    const getColor = async () => {\r\n      if (onlineGame) {\r\n        const players = await getPlayers();\r\n        if (name === players[0].name) {\r\n          setColorOne(\"white\");\r\n          setColorTwo(\"black\");\r\n        } else {\r\n          setColorOne(\"black\");\r\n          setColorTwo(\"white\");\r\n        }\r\n      } else {\r\n        if (name === getPlayersRed.playerOne) {\r\n          setColorOne(\"white\");\r\n          setColorTwo(\"black\");\r\n        } else {\r\n          setColorOne(\"black\");\r\n          setColorTwo(\"white\");\r\n        }\r\n      }\r\n    };\r\n    getColor();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div className={s.player__field}>\r\n        {checkWinner || checkLoss ? (\r\n          <img\r\n            className={s.win__ico}\r\n            src={process.env.PUBLIC_URL + \"/assets/imgs/win-ico.svg\"}\r\n            alt=\"\"\r\n          />\r\n        ) : (\r\n          \"\"\r\n        )}\r\n\r\n        <div\r\n          className={s.player__ava}\r\n          style={{ background: `${id === 1 ? colorTwo : colorOne}` }}\r\n        >\r\n          {name?.split(\"\")[0]}\r\n          {checkMove ? (\r\n            <img\r\n              className={s.moveHand__img}\r\n              src={process.env.PUBLIC_URL + \"/assets/imgs/move-hand.svg\"}\r\n              alt=\"\"\r\n            />\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </div>\r\n        <div className={s.player__name}>{name}</div>\r\n        <div className={s.player__board}>\r\n          <div className={s.part__one}>\r\n            {moves.figures\r\n              .filter((el, i) => (onlineGame ? i % 2 === id - 1 : el))\r\n              .map((el, i) => (\r\n                <div\r\n                  key={i}\r\n                  className={s.figure__img}\r\n                  style={{\r\n                    backgroundImage: `url(${process.env.PUBLIC_URL + el})`,\r\n                  }}\r\n                ></div>\r\n              ))}\r\n          </div>\r\n          <div className={s.part__two}>\r\n            {moves.moves\r\n              .filter((el, i) => (onlineGame ? i % 2 === id - 1 : el))\r\n              .map((el, i) => (\r\n                <div key={i} className={s.move__info}>\r\n                  {el}\r\n                </div>\r\n              ))}\r\n          </div>\r\n          <div className={s.part__three}>\r\n            {moves.times\r\n              .filter((el, i) => (onlineGame ? i % 2 === id - 1 : el))\r\n              .map((el, i) => (\r\n                <div key={i} className={s.move__info}>\r\n                  {el}\r\n                </div>\r\n              ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PlayerField;\r\n","import { FC } from \"react\";\r\nimport s from \"../game.module.scss\";\r\n\r\ninterface WinnerProps {\r\n  winner: string | undefined;\r\n}\r\n\r\nconst Winner: FC<WinnerProps> = ({ winner }) => {\r\n  return (\r\n    <>\r\n      <div className={s.win__window}>{`Win ${winner}`}</div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Winner;\r\n","import { FC } from \"react\";\r\nimport s from \"./../game.module.scss\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\ninterface PreloaderProps {\r\n  waitTime: number;\r\n}\r\n\r\nconst Preloader: FC<PreloaderProps> = ({ waitTime }) => {\r\n  return (\r\n    <>\r\n      <div className={s.preloader__window}>\r\n        {waitTime !== 0 ? (\r\n          <>\r\n            <div className={s.text}>Please, expect another player...</div>\r\n            <img\r\n              className={s.preloader}\r\n              src={process.env.PUBLIC_URL + \"/assets/imgs/preloader.gif\"}\r\n              alt=\"\"\r\n            />\r\n          </>\r\n        ) : (\r\n          <>\r\n            <div className={s.text}>Timeout expired. Try again.</div>\r\n            <Link to=\"/\">\r\n              <button className={s.lobby__btn}>to lobby</button>\r\n            </Link>\r\n          </>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Preloader;\r\n","import { FC, useEffect, useState } from \"react\";\r\nimport ChessField from \"./chess-field/chess-field\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PlayerField from \"./player-field/playerField\";\r\nimport s from \"./game.module.scss\";\r\nimport { Piece } from \"../../interfaces-enums\";\r\nimport { cloneBoardState } from \"./chess-field/chessboard-state\";\r\nimport Winner from \"./helpers/winner\";\r\nimport { getPlayers, updateTurnQueue } from \"../../../api/server\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { RootState } from \"../../../redux\";\r\nimport Preloader from \"./helpers/preloader\";\r\nimport { setMovesOne, setMovesTwo } from \"../../../redux/actions\";\r\nimport { setSocket, sendLoss, sendPlayer } from \"../../../api/webSocket\";\r\nimport { savedGame, savingGame, searchActualPlayer } from \"./helpers/helper\";\r\n\r\nconst Game: FC = () => {\r\n  const [pieces, setPieces] = useState<Piece[]>(cloneBoardState);\r\n  const [movesCount, setMovesCount] = useState(0);\r\n  const [waiting, setWaiting] = useState(1);\r\n  const [win, setWin] = useState(false);\r\n  const [loss, setLoss] = useState(false);\r\n  const [start, setStart] = useState(false);\r\n  const [time, setTime] = useState(\"00:00:00\");\r\n  const [player, setPlayer] = useState(false);\r\n  const [checkUpdatedMoves, setUpdatedMoves] = useState(false);\r\n  const [checkTurnQueue, setTurnQueue] = useState(false);\r\n  const [timer, setTimer] = useState(true);\r\n  const [namePlayerOne, setNamePlayerOne] = useState<string>();\r\n  const [namePlayerTwo, setNamePlayerTwo] = useState<string>();\r\n  const [actualPlayer, setActualPlayer] = useState(false);\r\n  const [boardActivator, setActiveForBoard] =\r\n    useState<React.RefObject<HTMLDivElement> | null>(null);\r\n  const onlineGame = useSelector((state: RootState) => state.game.onlineGame);\r\n  const getPlayersRed = useSelector((state: RootState) => state.player);\r\n\r\n  const dispatch = useDispatch();\r\n  const onlinePlayers = useSelector(\r\n    (state: RootState) => state.game.playersReady\r\n  );\r\n  let waitTime = 60;\r\n  useEffect(() => {\r\n    setSocket(setPieces, dispatch, setTurnQueue, setLoss, refreshGame);\r\n    setNamePlayerOne(getPlayersRed.playerOne);\r\n    setNamePlayerTwo(getPlayersRed.playerTwo);\r\n    if (!onlineGame) {\r\n      savedGame.gamers = [getPlayersRed.playerOne, getPlayersRed.playerTwo];\r\n    }\r\n    const checkPlayers = setInterval(() => {\r\n      if (onlineGame) {\r\n        sendPlayer(true);\r\n        waitTime--;\r\n      }\r\n      if (waitTime === 0) {\r\n        clearInterval(checkPlayers);\r\n        setWaiting(0);\r\n      }\r\n    }, 1000);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (onlinePlayers) {\r\n      const getOnlinePlayers = async () => {\r\n        const players = await getPlayers();\r\n        await setNamePlayerOne(players[0].name);\r\n        await setNamePlayerTwo(players[1].name);\r\n        savedGame.gamers = [players[0].name, players[1].name];\r\n        startMatch();\r\n      };\r\n      getOnlinePlayers();\r\n    }\r\n  }, [onlinePlayers]);\r\n\r\n  useEffect(() => {\r\n    if (onlinePlayers && onlineGame) {\r\n      const asyncEffect = async () => {\r\n        setActualPlayer(await searchActualPlayer(getPlayersRed.playerOnline));\r\n      };\r\n      asyncEffect();\r\n    }\r\n    setMovesCount((prev) => prev + 1);\r\n    savedGame.winner = checkTurnQueue;\r\n    savedGame.movesCount = movesCount;\r\n    savedGame.time = time;\r\n  }, [pieces]);\r\n\r\n  useEffect(() => {\r\n    let hours = Number(time.split(\":\")[0]);\r\n    let minutes = Number(time.split(\":\")[1]);\r\n    let seconds = Number(time.split(\":\")[2]);\r\n    let interval: NodeJS.Timeout;\r\n    if (!timer) {\r\n      interval = setInterval(() => {\r\n        if (hours < 3) {\r\n          if (minutes < 59) {\r\n            if (seconds < 59) {\r\n              seconds++;\r\n            } else {\r\n              minutes++;\r\n              seconds = 0;\r\n            }\r\n          } else {\r\n            hours++;\r\n            minutes = 0;\r\n            seconds = 0;\r\n          }\r\n        } else {\r\n          minutes = 0;\r\n          seconds = 0;\r\n        }\r\n        setTime(\r\n          `0${hours} : ${minutes > 9 ? minutes : `0${minutes}`} : ${\r\n            seconds > 9 ? seconds : `0${seconds}`\r\n          }`\r\n        );\r\n      }, 1000);\r\n    } else {\r\n      clearInterval(interval!);\r\n    }\r\n    return () => clearInterval(interval);\r\n  }, [timer, time]);\r\n\r\n  const startMatch = async () => {\r\n    updateTurnQueue(false);\r\n    setUpdatedMoves(false);\r\n    setStart(true);\r\n    setTimer(false);\r\n    setLoss(false);\r\n    setTime(\"00:00:00\");\r\n    setTurnQueue(false);\r\n    if (boardActivator) {\r\n      const board = boardActivator.current;\r\n      board!.style.pointerEvents = \"auto\";\r\n    }\r\n  };\r\n\r\n  const refreshGame = async () => {\r\n    setPieces(cloneBoardState());\r\n    setUpdatedMoves(true);\r\n    dispatch(\r\n      setMovesOne({\r\n        moves: [],\r\n        times: [],\r\n        figures: [],\r\n      })\r\n    );\r\n    dispatch(\r\n      setMovesTwo({\r\n        moves: [],\r\n        times: [],\r\n        figures: [],\r\n      })\r\n    );\r\n    setStart(false);\r\n    setWin(false);\r\n    setMovesCount(0);\r\n  };\r\n\r\n  const admitLoss = () => {\r\n    savingGame();\r\n    setLoss(true);\r\n    sendLoss(true);\r\n    refreshGame();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {onlineGame && !onlinePlayers && !loss ? (\r\n        <Preloader waitTime={waiting} />\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      {loss || win ? (\r\n        <Winner\r\n          winner={\r\n            win\r\n              ? checkTurnQueue\r\n                ? namePlayerOne\r\n                : namePlayerTwo\r\n              : !checkTurnQueue && loss\r\n              ? namePlayerTwo\r\n              : namePlayerOne\r\n          }\r\n        />\r\n      ) : null}\r\n      {!start && !win ? (\r\n        <>\r\n          {!onlineGame ? (\r\n            <button className={s.start__btn} onClick={startMatch}>\r\n              Start\r\n            </button>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          <Link to=\"/\">\r\n            <button className={s.lobby__btn} style={{ left: \"80%\" }}>\r\n              to lobby\r\n            </button>\r\n          </Link>\r\n          <Link to=\"/replays\" onClick={refreshGame}>\r\n            <button className={s.replays__btn}>replays</button>\r\n          </Link>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <div className={s.timer}>\r\n            Round Time: <b>{time}</b>\r\n          </div>\r\n          {win ? (\r\n            <>\r\n              <Link to=\"/\" onClick={refreshGame}>\r\n                <button className={s.lobby__btn}>to lobby</button>\r\n              </Link>\r\n              <Link to=\"/replays\" onClick={refreshGame}>\r\n                <button className={s.replays__btn}>replays</button>\r\n              </Link>\r\n            </>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          {!win ? (\r\n            onlineGame ? (\r\n              actualPlayer ? (\r\n                <button className={s.loss__btn} onClick={admitLoss}>\r\n                  admit loss\r\n                </button>\r\n              ) : (\r\n                \"\"\r\n              )\r\n            ) : (\r\n              <button className={s.loss__btn} onClick={admitLoss}>\r\n                admit loss\r\n              </button>\r\n            )\r\n          ) : !onlineGame ? (\r\n            <button className={s.loss__btn} onClick={refreshGame}>\r\n              reset\r\n            </button>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </>\r\n      )}\r\n      <div className={s.game__container}>\r\n        <PlayerField\r\n          name={namePlayerOne as string}\r\n          id={1}\r\n          checkWinner={checkTurnQueue && win ? true : false}\r\n          checkLoss={checkTurnQueue && loss ? true : false}\r\n          checkMove={!checkTurnQueue && start ? true : false}\r\n        />\r\n        <ChessField\r\n          setWin={setWin}\r\n          setPieces={setPieces}\r\n          setActiveForBoard={setActiveForBoard}\r\n          setStart={setStart}\r\n          setPlayer={setPlayer}\r\n          setTimer={setTimer}\r\n          setTurnQueue={setTurnQueue}\r\n          checkTurnQueue={checkTurnQueue}\r\n          checkUpdatedMoves={checkUpdatedMoves}\r\n          pieces={pieces}\r\n          win={win}\r\n          player={player}\r\n          time={time}\r\n          boardActivator={boardActivator}\r\n          start={start}\r\n        />\r\n        <PlayerField\r\n          name={namePlayerTwo as string}\r\n          id={2}\r\n          checkWinner={!checkTurnQueue && win ? true : false}\r\n          checkLoss={!checkTurnQueue && loss ? true : false}\r\n          checkMove={checkTurnQueue && start ? true : false}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default Game;\r\n","import { FC, useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { db, getSavedGameIndexedDB } from \"../../../indexedDb/indexedDb\";\r\nimport { SavedGame } from \"../../interfaces-enums\";\r\nimport s from \"./replays.module.scss\";\r\n\r\nconst Replays: FC = () => {\r\n  const [gameInfo, setGameInfo] = useState<SavedGame[]>([]);\r\n\r\n  useEffect(() => {\r\n    const getInfoIndexedDb = setInterval(() => {\r\n      if (db) {\r\n        getSavedGameIndexedDB(setGameInfo);\r\n        clearInterval(getInfoIndexedDb);\r\n      }\r\n    }, 1000);\r\n  }, []);\r\n  ///////\r\n  return (\r\n    <>\r\n      <Link to=\"/\">\r\n        <button className={s.lobby__btn}>to lobby</button>\r\n      </Link>\r\n      <div className={s.repeats__container}>\r\n        {gameInfo.map((el: SavedGame) => (\r\n          <div className={s.repeats__block}>\r\n            <div className={s.chess__info}>\r\n              <div className={s.name__circle}>\r\n                {el.gamers[0][0]}\r\n                {el.winner ? <div className={s.win__marker}></div> : \"\"}\r\n              </div>\r\n              <div className={s.name__circle_2}>\r\n                {el.gamers[1][0]}\r\n                {!el.winner ? <div className={s.win__marker}></div> : \"\"}\r\n              </div>\r\n              <div className={s.moves__info}>\r\n                Moves: <b>{el.movesCount}</b>\r\n              </div>\r\n              <div className={s.time__info}>\r\n                Common Time: <b>{el.time}</b>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Replays;\r\n","import { FC, useRef } from \"react\";\r\nimport { ModalProps } from \"../../interfaces-enums\";\r\nimport s from \"./start-window.module.scss\";\r\n\r\nconst ChangeNameModal: FC<ModalProps> = ({\r\n  active,\r\n  setActive,\r\n  number,\r\n  setInput,\r\n  setInput2,\r\n}) => {\r\n  const inputRef = useRef<HTMLInputElement>(null);\r\n\r\n  const setName = () => {\r\n    setActive(false);\r\n    number === 1\r\n      ? setInput(`${inputRef.current?.value}`)\r\n      : setInput2(`${inputRef.current?.value}`);\r\n    inputRef.current!.value = \"\";\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className={active ? s.modal : s.modal__disable}>\r\n        <div className={s.modal__inner}>\r\n          <div className={s.top__text}>Change player name</div>\r\n          <div className={s.input__plus__text}>\r\n            <input type=\"text\" className={s.input} ref={inputRef} />\r\n            <div className={s.text}>Player {number}</div>\r\n          </div>\r\n          <button className={s.change__btn} onClick={setName}>\r\n            Change\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ChangeNameModal;\r\n","import { FC, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setOnlineGame, setOnlinePlayers } from \"../../../redux/actions\";\r\nimport { deletePlayer, getPlayers } from \"../../../api/server\";\r\nimport s from \"./start-window.module.scss\";\r\n\r\ninterface ModalProps {\r\n  setGameType: React.Dispatch<React.SetStateAction<string>>;\r\n  gameType: string;\r\n}\r\n\r\nconst Modal: FC<ModalProps> = ({ gameType, setGameType }) => {\r\n  const [closeModal, setCloseModal] = useState(false);\r\n  const dispatch = useDispatch();\r\n\r\n  const setGame = async () => {\r\n    const players = await getPlayers();\r\n    players.forEach(async (el) => {\r\n      if (players.length > 1) {\r\n        await deletePlayer(el.id);\r\n      }\r\n      if (el.name === localStorage.getItem(\"player\")) {\r\n        await deletePlayer(el.id);\r\n      }\r\n    });\r\n    dispatch(setOnlineGame(false));\r\n    dispatch(setOnlinePlayers(false));\r\n    if (gameType !== \"\") {\r\n      setCloseModal(true);\r\n      if (gameType === \"2\") {\r\n        dispatch(setOnlineGame(true));\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className={!closeModal ? s.modal : s.modal__disable}>\r\n        <div className={s.modal__inner}>\r\n          <div className={s.top__text}>Change Game</div>\r\n          <div className={s.block__container}>\r\n            <div\r\n              className={gameType !== \"2\" ? s.inactive__type : s.active__type}\r\n              onClick={() => setGameType(\"2\")}\r\n            >\r\n              Online\r\n            </div>\r\n            <div\r\n              className={gameType !== \"1\" ? s.inactive__type : s.active__type}\r\n              onClick={() => setGameType(\"1\")}\r\n            >\r\n              Offline\r\n            </div>\r\n          </div>\r\n          <button className={s.change__game__btn} onClick={setGame}>\r\n            OK\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import { FC } from \"react\";\r\nimport { PlayerProps } from \"../../interfaces-enums\";\r\nimport s from \"./start-window.module.scss\";\r\n\r\nconst Player: FC<PlayerProps> = ({ num, name, setPlayer, setModalActive }) => {\r\n  return (\r\n    <div className={s.player__box}>\r\n      <div className={s.player__ava}></div>\r\n      <div\r\n        className={s.player__name}\r\n        onClick={() => {\r\n          setModalActive(true);\r\n          setPlayer(num);\r\n        }}\r\n      >\r\n        {name !== \"\" ? name : `Player ${num}`}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Player;\r\n","import { FC, useRef, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport s from \"./start-window.module.scss\";\r\nimport ChangeNameModal from \"./change-name-modal\";\r\nimport Modal from \"./modal-window\";\r\nimport { addPlayer, getPlayers } from \"../../../api/server\";\r\nimport Player from \"./player-element\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {\r\n  setPlayerOne,\r\n  setPlayerOnline,\r\n  setPlayerTwo,\r\n} from \"../../../redux/actions\";\r\n\r\nconst StartWindow: FC = () => {\r\n  const [playerNum, setPlayer] = useState(0);\r\n  const [modalActive, setModalActive] = useState(false);\r\n  const [modalActiveOnline, setModalActiveOnline] = useState(true);\r\n  const [inputOne, setInputOne] = useState(\"\");\r\n  const [inputTwo, setInput2] = useState(\"\");\r\n  const [inputOnline, setInputOnline] = useState(\"\");\r\n  const [gameType, setGameType] = useState(\"\");\r\n  const playerNameInput = useRef<HTMLInputElement>(null);\r\n  const dispatch = useDispatch();\r\n\r\n  const setStartState = async () => {\r\n    dispatch(setPlayerOne(`${inputOne !== \"\" ? inputOne : \"Player 1\"}`));\r\n    dispatch(setPlayerTwo(`${inputTwo !== \"\" ? inputTwo : \"Player 2\"}`));\r\n    await dispatch(\r\n      setPlayerOnline(`${inputOnline !== \"\" ? inputOnline : \"Unknown\"}`)\r\n    );\r\n\r\n    await addPlayer(inputOnline);\r\n  };\r\n\r\n  const setPlayerNameOnline = async () => {\r\n    setInputOnline(`${playerNameInput.current?.value}`);\r\n    playerNameInput.current!.value = \"\";\r\n    setModalActiveOnline(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {gameType === \"2\" ? (\r\n        <div className={modalActiveOnline ? s.modal : s.modal__disable}>\r\n          <div className={s.modal__inner}>\r\n            <div className={s.top__text_special}>Type Your Name</div>\r\n            <input className={s.input} type=\"text\" ref={playerNameInput} />\r\n            <button className={s.change__btn} onClick={setPlayerNameOnline}>\r\n              OK\r\n            </button>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      <div className={s.body__container}>\r\n        {gameType === \"1\" ? (\r\n          <Player\r\n            num={1}\r\n            name={inputOne}\r\n            setPlayer={setPlayer}\r\n            setModalActive={setModalActive}\r\n          />\r\n        ) : (\r\n          \"\"\r\n        )}\r\n        <div className={s.btns__container}>\r\n          <Link to=\"/game\">\r\n            <button className={s.start__btn} onClick={setStartState}>\r\n              Start\r\n            </button>\r\n          </Link>\r\n          <div className={s.network__info}>\r\n            {gameType === \"2\" ? \"Online\" : \"Offline\"}\r\n          </div>\r\n          <Link to=\"/replays\">\r\n            <button className={s.view__btn}>View replays</button>\r\n          </Link>\r\n        </div>\r\n        {gameType === \"1\" ? (\r\n          <Player\r\n            num={2}\r\n            name={inputTwo}\r\n            setPlayer={setPlayer}\r\n            setModalActive={setModalActive}\r\n          />\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </div>\r\n      <Modal setGameType={setGameType} gameType={gameType} />\r\n      <ChangeNameModal\r\n        active={modalActive}\r\n        setActive={setModalActive}\r\n        number={playerNum}\r\n        setInput={setInputOne}\r\n        setInput2={setInput2}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default StartWindow;\r\n","import { FC } from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport Game from \"./game/game\";\r\nimport Replays from \"./replays/replays\";\r\nimport StartWindow from \"./start-window/start-window\";\r\n\r\nconst Body: FC = () => {\r\n  return (\r\n    <>\r\n      <Router>\r\n        <Switch>\r\n          <Route path=\"/game\">\r\n            <Game />\r\n          </Route>\r\n          <Route path=\"/replays\">\r\n            <Replays />\r\n          </Route>\r\n          <Route path=\"/\">\r\n            <StartWindow />\r\n          </Route>\r\n        </Switch>\r\n      </Router>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Body;\r\n","import { FC } from \"react\";\r\nimport s from \"./footer.module.scss\";\r\n\r\nconst Footer: FC = () => {\r\n  return (\r\n    <div className={s.footer__container}>\r\n      <a\r\n        className={s.footer__text}\r\n        href=\"https://github.com/OlegRabushko/Chess-Server#readme\"\r\n      >\r\n        Уважаемый проверяющий, пожалуйста перейдите по этой ссылке. Здесь кратко\r\n        о сделанной работе!\r\n      </a>\r\n      <div>Rabushko Oleg© - RS School 2021</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\nimport Header from \"./components/header/header\";\r\nimport Body from \"./components/body/body\";\r\nimport Footer from \"./components/footer/footer\";\r\n\r\nimport \"./App.scss\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Header />\r\n      <Body />\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import {\r\n  OnlineGameProps,\r\n  GameState,\r\n  OnlinePlayersProps,\r\n  MoveDeskProps,\r\n  MovesState,\r\n  MoveDTO,\r\n  Move,\r\n  PlayersState,\r\n  PlayersProps,\r\n} from \"./redux-types\";\r\nimport {\r\n  ADD_MOVE_ONE,\r\n  ADD_MOVE_TWO,\r\n  PlAYER_ONE,\r\n  PlAYER_ONLINE,\r\n  PlAYER_TWO,\r\n  SET_GAME,\r\n  SET_MOVES_ONE,\r\n  SET_MOVES_TWO,\r\n  SET_ONLINE_PLAYERS,\r\n} from \"./actions\";\r\n\r\nconst initialState: GameState = {\r\n  onlineGame: false,\r\n  playersReady: false,\r\n};\r\n\r\nexport function gameReducer(\r\n  state: GameState = initialState,\r\n  action: OnlineGameProps | OnlinePlayersProps\r\n) {\r\n  switch (action.type) {\r\n    case SET_GAME:\r\n      return { ...state, onlineGame: action.payload };\r\n    case SET_ONLINE_PLAYERS:\r\n      return { ...state, playersReady: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nconst playersState: PlayersState = {\r\n  playerOne: \"\",\r\n  playerTwo: \"\",\r\n  playerOnline: \"\",\r\n};\r\n\r\nexport function playersReducer(\r\n  state: PlayersState = playersState,\r\n  action: PlayersProps\r\n) {\r\n  switch (action.type) {\r\n    case PlAYER_ONE:\r\n      return { ...state, playerOne: action.payload };\r\n    case PlAYER_TWO:\r\n      return { ...state, playerTwo: action.payload };\r\n    case PlAYER_ONLINE:\r\n      return { ...state, playerOnline: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nconst initialMovesState: MovesState = {\r\n  one: {\r\n    moves: [],\r\n    times: [],\r\n    figures: [],\r\n  },\r\n  two: {\r\n    moves: [],\r\n    times: [],\r\n    figures: [],\r\n  },\r\n};\r\n\r\nexport function moveDesksReducer(\r\n  state: MovesState = initialMovesState,\r\n  action: MoveDeskProps\r\n) {\r\n  const payload = action.payload as MoveDTO;\r\n\r\n  switch (action.type) {\r\n    case SET_MOVES_ONE:\r\n      return { ...state, one: action.payload as Move };\r\n    case SET_MOVES_TWO:\r\n      return { ...state, two: action.payload as Move };\r\n    case ADD_MOVE_ONE:\r\n      return {\r\n        ...state,\r\n        one: {\r\n          moves: [...state.one.moves, payload.move],\r\n          times: [...state.one.times, payload.time],\r\n          figures: [...state.one.figures, payload.url],\r\n        },\r\n      };\r\n    case ADD_MOVE_TWO:\r\n      return {\r\n        ...state,\r\n        two: {\r\n          moves: [...state.two.moves, payload.move],\r\n          times: [...state.two.times, payload.time],\r\n          figures: [...state.two.figures, payload.url],\r\n        },\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers, createStore, applyMiddleware } from \"redux\";\r\nimport { gameReducer, moveDesksReducer, playersReducer } from \"./reducers\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nconst rootReducer = combineReducers({\r\n  game: gameReducer,\r\n  player: playersReducer,\r\n  moves: moveDesksReducer,\r\n});\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>;\r\n\r\nexport const store = createStore(\r\n  rootReducer,\r\n  composeWithDevTools(applyMiddleware(thunk))\r\n);\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport { Provider } from \"react-redux\";\r\nimport { store } from \"./redux\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}